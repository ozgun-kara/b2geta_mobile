// ignore_for_file: public_member_api_docs, sort_constructors_first
// ignore_for_file: must_be_immutable

import 'package:equatable/equatable.dart';

///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class CategoryFeatureasModelFeatureValues extends Equatable {
/*
{
  "id": "9343598",
  "attribute_id": "13549",
  "displayed_value": "Bu00fcyu00fck"
} 
*/

  String? id;
  String? attributeId;
  String? displayedValue;

  CategoryFeatureasModelFeatureValues({
    this.id,
    this.attributeId,
    this.displayedValue,
  });

  CategoryFeatureasModelFeatureValues.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    attributeId = json['attribute_id']?.toString();
    displayedValue = json['displayed_value']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['attribute_id'] = attributeId;
    data['displayed_value'] = displayedValue;
    return data;
  }

  @override
  List<Object?> get props => [id, attributeId, displayedValue];

  @override
  String toString() {
    return '$displayedValue';
  }
}

class CategoryFeatureasModelFeature {
/*
{
  "id": "13549",
  "field_type": "checkbox",
  "label": "Boyut",
  "value": null,
  "values": [
    {
      "id": "9343598",
      "attribute_id": "13549",
      "displayed_value": "Bu00fcyu00fck"
    }
  ],
  "required": "0",
  "marked_to_buy": "0",
  "filterable": "0",
  "measure_group": null,
  "status": "1"
} 
*/

  String? id;
  String? fieldType;
  String? label;
  String? value;
  List<CategoryFeatureasModelFeatureValues?>? values;
  String? required;
  String? markedToBuy;
  String? filterable;
  String? measureGroup;
  String? status;

  CategoryFeatureasModelFeature({
    this.id,
    this.fieldType,
    this.label,
    this.value,
    this.values,
    this.required,
    this.markedToBuy,
    this.filterable,
    this.measureGroup,
    this.status,
  });
  CategoryFeatureasModelFeature.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    fieldType = json['field_type']?.toString();
    label = json['label']?.toString();
    value = json['value']?.toString();
    if (json['values'] != null) {
      final v = json['values'];
      final arr0 = <CategoryFeatureasModelFeatureValues>[];
      v.forEach((v) {
        arr0.add(CategoryFeatureasModelFeatureValues.fromJson(v));
      });
      values = arr0;
    }
    required = json['required']?.toString();
    markedToBuy = json['marked_to_buy']?.toString();
    filterable = json['filterable']?.toString();
    measureGroup = json['measure_group']?.toString();
    status = json['status']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['field_type'] = fieldType;
    data['label'] = label;
    data['value'] = value;
    if (values != null) {
      final v = values;
      final arr0 = [];
      for (var v in v!) {
        arr0.add(v!.toJson());
      }
      data['values'] = arr0;
    }
    data['required'] = required;
    data['marked_to_buy'] = markedToBuy;
    data['filterable'] = filterable;
    data['measure_group'] = measureGroup;
    data['status'] = status;
    return data;
  }
}

class CategoryFeatureasModel {
/*
{
  "id": "413",
  "feature_id": "13549",
  "feature": {
    "id": "13549",
    "field_type": "checkbox",
    "label": "Boyut",
    "value": null,
    "values": [
      {
        "id": "9343598",
        "attribute_id": "13549",
        "displayed_value": "Bu00fcyu00fck"
      }
    ],
    "required": "0",
    "marked_to_buy": "0",
    "filterable": "0",
    "measure_group": null,
    "status": "1"
  }
} 
*/

  String? id;
  String? featureId;
  CategoryFeatureasModelFeature? feature;

  CategoryFeatureasModel({
    this.id,
    this.featureId,
    this.feature,
  });
  CategoryFeatureasModel.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    featureId = json['feature_id']?.toString();
    feature = (json['feature'] != null)
        ? CategoryFeatureasModelFeature.fromJson(json['feature'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['feature_id'] = featureId;
    if (feature != null) {
      data['feature'] = feature!.toJson();
    }
    return data;
  }

  @override
  bool operator ==(covariant CategoryFeatureasModel other) {
    if (identical(this, other)) return true;

    return other.id == id && other.featureId == featureId;
  }

  @override
  int get hashCode => id.hashCode ^ featureId.hashCode;
}
